version: "3"

services:
  server:
    container_name: server
    build:
      context: ./server
    stdin_open: true
    tty: true
    env_file:
      - .env
    ports:
      - "$BACKEND_PORT:$BACKEND_PORT"
    command: uvicorn main:app --workers $BACKEND_WORKERS --port $BACKEND_PORT --host 0.0.0.0

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    stdin_open: true
    tty: true
    ports:
      - "$FRONTEND_PORT:$FRONTEND_PORT"
    volumes:
      - ./client:/usr/app
    env_file:
      - .env
    command: yarn start --port $FRONTEND_PORT

#   prometheus:
#     container_name: prometheus
#     image: prom/prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus_data:/prometheus

#     command:
#       - "--config.file=/etc/prometheus/prometheus.yml"
#       - "--storage.tsdb.path=/prometheus"
#       - "--web.console.libraries=/usr/share/prometheus/console_libraries"
#       - "--web.console.templates=/usr/share/prometheus/consoles"
#       - "--web.enable-lifecycle"
#     expose:
#       - 9090
#   grafana:
#     image: grafana/grafana:6.7.2
#     container_name: grafana
#     volumes:
#       - grafana_data:/var/lib/grafana
#       - ./grafana/provisioning:/etc/grafana/provisioning
#     environment:
#       - GF_SECURITY_ADMIN_USER=admin
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#       - GF_USERS_ALLOW_SIGN_UP=false
#     restart: unless-stopped
#     expose:
#       - 3000
#    proxy:
#      container_name: proxy
#      image: caddy:latest
#      volumes:
#        - ./proxy:/proxy
#      working_dir: /proxy
#      command: caddy run

# volumes:
#   grafana_data: {}
#   prometheus_data: {}
