version: "3"

services:
  server:
    container_name: server
    build:
      context: ./server
    image: server_image
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - "8000:8000"
    volumes:
      - ./server:/src
    command: sh -c "uvicorn main:app --reload --host 0.0.0.0"
    env_file:
      - .env.dev

  client:
    container_name: client
    build:
      context: ./client
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./client:/usr/app
    env_file:
      - .env.dev

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.37.6
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    expose:
      - 9090

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3030:3000"

  app_db:
    image: mongo
    container_name: app_db
    ports:
      - "27017:27017"
    volumes:
      - ./appdb:/data/db
    env_file:
      - .env.dev
    restart: unless-stopped

  log_db:
    image: mongo
    container_name: log_db
    ports:
      - "27018:27017"
    volumes:
      - ./logdb:/data/db
    env_file:
      - .env.dev
    restart: unless-stopped
    # expose:
    #   - 3000

  rabbitmq_server:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbithost
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=dhruva_host
      - RABBITMQ_ERLANG_COOKIE=COOKIE
    ports:
      - "15672:15672"
      - "5672:5672"

  celery:
    container_name: celery
    image: server_image
    working_dir: /src
    volumes:
      - ./server:/src
    depends_on:
      rabbitmq_server:
        condition: service_started
      server:
        condition: service_started
    command: sh -c "python3 -m celery -A celery_backend.celery_app worker"

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes: 
      - cache:/data
    env_file:
      - .env.dev
    command: redis-server --save 20 1 --loglevel warning
    restart: unless-stopped

  celery-flower:
    container_name: celery-flower
    image: server_image
    working_dir: /src
    environment:
      - AMQP_USERNAME=user
      - AMQP_PASSWORD=user
      - AMQP_ADMIN_USERNAME=admin
      - AMQP_ADMIN_PASSWORD=admin
      - AMQP_HOST=dhruva_host
      - AMQP_PORT=5672
      - AMQP_ADMIN_HOST=dhruva_host
      - AMQP_ADMIN_PORT=15672
      - FLOWER_BASIC_AUTH=user:user
    volumes:
      - ./server:/src
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq_server:
        condition: service_started
      server:
        condition: service_started
    command: sh -c "python3 -m celery -A celery_backend.celery_app flower --port=5555 --basic_auth=admin:admin --broker_api=http://admin:admin@rabbithost:15672/api/ --address=0.0.0.0"

    prom-aggregation-gateway:
      container_name: prom-aggregation-gateway
      image: ghcr.io/zapier/prom-aggregation-gateway:v0.7.0
      volumes:
        - prometheus_data:/prom-agg-gateway
      ports:
        - "8080:80"

volumes:
  grafana_data: {}
  prometheus_data: {}
  redis:
    driver: local
